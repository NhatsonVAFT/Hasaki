try {
    function FBPIXEL() {
        this.init();
    }
    FBPIXEL.prototype = {
        homePage: 'Homepage',
        categoryPage: 'Category',
        subCategoryPage: 'Sub Category',
        searchPage: 'Search Result',
        detailRelevantPage: 'Detail - Course Relevant',
        cartPage: 'Cart Page',
        checkoutPage: 'Checkout Page',
        purchasePage: 'Purchase Page',
        otherPage: 'Other Page',
        tagPage: 'Tag Page',
        init: function () {
            var that = this;
        },
        initDetailImpression: function ($id, $value = null, $title = null, $categoryName = null) {
            var that = this;
            if ($value === null) {
                $value = $('.main_price').text().trim();
            }
            let productObj = {
                content_ids: [$id],
                content_type: 'product',
                content_name: $title,
                content_category: $categoryName,
                value: $value,
                currency: 'VND'
            };
            if (productObj) {
                that.insertDataDetailImpression(productObj);
            }
            if(typeof ttq != 'undefined') {
                ttq.track('ViewContent', {
                    'content_type': 'product',
                    'content_id': String($id),
                    'value': $value,
                    'content_name': $title,
                    'currency': 'VND',
                    'content_category': $categoryName
                })
            }
        },
        initAddToCart: function ($sku, $price, $quantity, event_id = null) {
            var productObj = {
                'content_ids': [$sku],
                'contents': [{
                    'id' : $sku,
                    'item_price' : $price,
                    'quantity' : $quantity
                }],
                'content_type': 'product',
                'value': $price*$quantity,
                'currency': 'VND'
            };
            this.insertDataAddToCart(productObj, event_id);
        },
        insertDataDetailImpression: function (productObj) {
            fbq('track', 'ViewContent', productObj, {eventID: window.eventIDProduct});
        },
        insertDataAddToCart: function (productObj, event_id = null) {
            if(event_id) {
                fbq('track', 'AddToCart', productObj, {eventID: event_id});
            } else {
                fbq('track', 'AddToCart', productObj);
            }
            if(typeof ttq != 'undefined') {
                var contents = [];
                if(productObj.contents) {
                    var _contentIds = typeof productObj.content_ids == 'string' ? JSON.parse(productObj.content_ids) : productObj.content_ids;
                    var _contents = typeof productObj.contents == 'string' ? JSON.parse(productObj.contents) : productObj.contents;
                    _contentIds.forEach(id => {
                        _contents.forEach(item => {
                          if(item.id == id) {
                            contents.push({
                              content_id: id,
                              content_type: 'product',
                              quantity: item.quantity,
                              price: item.item_price,
                            });
                          }
                        })
                    });
                    ttq.track('AddToCart', {
                        'contents': contents,
                        'value': productObj.value,
                        'currency': 'VND'
                    });
                }
            }
        },
        insertDataPurchase: function (productObj) {
            fbq('track', 'Purchase', productObj);
        },
        insertDataCategory: function (productObj) {
            fbq('trackCustom', 'ViewCategory', productObj);
        },
        insertDataHome: function (productObj) {
            fbq('track', 'ViewHome', productObj);
        },
        insertDataSearch: function (params) {
            fbq('trackCustom', 'ViewSearch', params);
        },
        insertDataCheckout: function (params) {
            fbq('track', 'InitiateCheckout', params)
        },
        insertTagPage: function (params) {
            fbq('trackCustom', 'ViewTags', params);
        },
        insertCampaign: function (productObj) {
            fbq('trackCustom', 'ViewCampaign', productObj);
        }
    };
} catch (e) {

};try {
    var gtmDataLayer = gtmDataLayer || {};
    gtmDataLayer.GA = function() {

    }
    gtmDataLayer.GA.createProductObjects = function(items, listName) {
        var productObjects = [];
        var listSize = items.length;
        if (listSize === 0) return;
        $.each(items, function(index, value) {
            var obj = {
                'id': value.id,
                'name': value.name,
                'price': parseInt(value.price),
                'brand': value.brand,
                'category': value.category ? value.category : value.categoryName,
                'variant': value.variant
            };
            obj['position'] = listSize > 1 ? index : value.position || 0;
            if (listName) {
                obj['list'] = listName;
            } else if (value.list) {
                obj['list'] = value.list;
            }
            if (value.quantity) {
                obj['quantity'] = parseInt(value.quantity);
            }
            productObjects.push(obj);
        });
        return productObjects;
    };
    gtmDataLayer.GA.sendImpressions = function(items, typeRemarketing) {
        if (!items || items.length === 0) return;
        var products = this.createProductObjects(items);
        var impression = {
            "currencyCode": "VND",
            "impressions": products
        };
        dataLayer.push({
            "event": "impressionsDesktop",
            "ecommerce": impression
        });
        dataLayer.push({
            dynx_pagetype: typeRemarketing,
            dynx_totalvalue: 0,
            dynx_itemid: '',
        });
    };
    gtmDataLayer.GA.remarketingData = function(products, type = 'cart') {
        var remarketingData = {
            dynx_pagetype: type,
            dynx_category: 'Mỹ phẩm',
            dynx_itemid: [],
            dynx_brand: [],
            dynx_totalvalue: 0,
        };
        products.map((item) => {
            var {id, price, brand, quantity = 1} = item;
            remarketingData.dynx_itemid.push(id);
            if (!remarketingData.dynx_brand.includes(brand)) {
                remarketingData.dynx_brand.push(brand);
            }
            remarketingData.dynx_totalvalue += price*quantity;
        });
        remarketingData.dynx_itemid = remarketingData.dynx_itemid.toString();
        remarketingData.dynx_brand = remarketingData.dynx_brand.toString();
        remarketingData.dynx_totalvalue = parseInt(remarketingData.dynx_totalvalue);
        return remarketingData;
    }
    gtmDataLayer.GA.sendProductView = function(items) {
        var impression = {
            "detail": {
                "products": this.createProductObjects(items)
            }
        };
        var {id = 0, price = 0, brand = null} = items[0];
        dataLayer.push({
            "event": "detailProductDesktop",
            "ecommerce": impression,
            "dynx_pagetype": 'Product',
            "dynx_itemid": id,
            "dynx_category": 'Mỹ phẩm',
            "dynx_brand": brand,
            "dynx_totalvalue": parseInt(price)
        });
    }
    gtmDataLayer.GA.productClick = function(items) {
        dataLayer.push({
            "event": "productClickDesktop",
            "ecommerce": {
                "click": {
                    "actionField": {
                        "list": items && items[0] ? items[0].list : ""
                    },
                    "products": this.createProductObjects(items)
                }
            }
        });
    };
    gtmDataLayer.GA.sendAddToCart = function(items) {
        if (items.length !== 0) {
            var type = 'addToCartDesktop';
            var products = this.createProductObjects(items);
            var data = {
                "event": type,
                "ecommerce": {
                    "currencyCode": "VND",
                    "add": {
                        "products": products
                    }
                }
            };
            data = Object.assign({}, data, this.remarketingData(products, 'cart'));
            dataLayer.push(data);
            // this.sendItem(items[0], type);
        }
    };
    gtmDataLayer.GA.sendAddToCartCombo = function(items) {
        if (items.length !== 0) {
            var type = 'addToCartComboDesktop';
            var products = this.createProductObjects(items);
            var data = {
                "event": type,
                "ecommerce": {
                    "currencyCode": "VND",
                    "add": {
                        "products": products
                    }
                }
            };
            data = Object.assign({}, data, this.remarketingData(products, 'cart'));
            dataLayer.push(data);
        }
    };
    gtmDataLayer.GA.sendRemoveFromCart = function(items) {
        var type = 'removeFromCartDesktop';
        var products = this.createProductObjects(items);
        var data = {
            "event": type,
            "ecommerce": {
                "currencyCode": "VND",
                "remove": {
                    "products": products
                }
            }
        };
        data = Object.assign({}, data, this.remarketingData(products, 'remove cart'));
        dataLayer.push(data);
    };
    gtmDataLayer.GA.reviewCart = function(items) {
        var products = this.createProductObjects(items);
        var data = {
            "event":"reviewCartDesktop",
            "ecommerce": {
                "checkout": {
                    "products": products
                }
            }
        };
        data = Object.assign({}, data, this.remarketingData(products));
        dataLayer.push(data);
    };
    gtmDataLayer.GA.cartCheckOutClick = function(items) {
        var option = 'COD';
        if (items.length !== 0) {
            dataLayer.push({
                "event":"cartCheckOutClickDesktop",
                "ecommerce": {
                    "checkout": {
                        "actionField": {step: 1, option},
                        "products": this.createProductObjects(items)
                    }
                }
            });
        }
    };
    gtmDataLayer.GA.productCheckoutClick = function(items) {
        var option = 'COD';
        if (items.length !== 0) {
            dataLayer.push({
                "event":"productCheckoutClickDesktop",
                "ecommerce": {
                    "checkout": {
                        "actionField": {step: 1, option},
                        "products": this.createProductObjects(items)
                    }
                }
            });
        }
    };
    gtmDataLayer.GA.popupCartCheckoutClick = function(items) {
        var option = 'COD';
        if (items.length !== 0) {
            dataLayer.push({
                "event":"popupCartCheckoutClickDesktop",
                "ecommerce": {
                    "checkout": {
                        "actionField": {step: 1, option},
                        "products": this.createProductObjects(items)
                    }
                }
            });
        }
    };
    gtmDataLayer.Page = function(vars = null) {
        this.homePage = 'Homepage' ;
        this.categoryPage = 'Category' ;
        this.brandPage = 'Brand' ;
        this.searchPage = 'Search Result' ;
        this.cartPage = 'Cart Page' ;
        this.otherPage = 'Other Page' ;
        this.tagPage = 'Tag Page' ;
        this.relatedProducts = 'Related Products' ;
        this.homeDeals = 'Home Deals' ;
        this.homeCate = 'Home Cate' ;
        this.homeSuggestions = 'Home Product Suggestions' ;
        this.categorySuggestions = 'Category Suggestions' ;
        this.homeViewed = 'Home Viewed' ;
        this.categoryViewed = 'Category Viewed' ;
        this.dealsViewed = 'Deals Viewed' ;
        this.searchViewed = 'Search Viewed' ;
        this.tagViewed = 'Tag Viewed' ;
        this.brandViewed = 'Brand Viewed' ;
        vars = vars || {};
        this.productId = vars.productId || '';
        this.itemsList = vars.itemsList || [];
        this.type = vars.type || '';
        this.remarketing = vars.remarketing || '';
        var itemDict = this.itemDict = {};
        this.itemsList.forEach(value => {
            itemDict[value.id] = value;
        });
        this.cart = new gtmDataLayer.CartDB(this.itemsList);
        if (typeof vars.isSetItemsList == 'undefined') {
            this.itemsList = this.setDataImpression(this.getParentElementListing());
            if (this.type == 'CATEGORY') {
                var itemDict = this.itemDict = {};
                this.itemsList.forEach(value => {
                    itemDict[value.id] = value;
                });
                this.cart = new gtmDataLayer.CartDB(this.itemsList);
            }
        }
        this.onLoad();
    };
    gtmDataLayer.Page.prototype.onLoad = function() {
        switch (this.type) {
            case 'HOME':
                gtmDataLayer.GA.sendImpressions(this.itemsList, this.remarketing);
                break;
            case 'PRODUCT':
                if (this.itemDict[this.productId]) {
                    var items = [this.itemDict[this.productId]];
                    gtmDataLayer.GA.sendProductView(items);
                }
                gtmDataLayer.GA.sendImpressions(this.itemsList, this.remarketing);
                break;
            case 'CATEGORY':
                gtmDataLayer.GA.sendImpressions(this.itemsList, this.remarketing);
                break;
            case 'CHECKOUT':
                if (this.itemsList) {
                    gtmDataLayer.GA.reviewCart(this.itemsList);
                }
                break;
        }
    };
    gtmDataLayer.Page.prototype.getParentElementListing = function() {
        if (this.type) return;
        var that = this;
        var path = window.location.pathname;
        var parentElement = null;
        if (path == '/') {
            parentElement = [{
                'parent': '#giatot_daily',
                'list': that.homeDeals,
            },
                {
                    'parent': '.slider_item_category',
                    'list': that.homeCate,
                },
                {
                    'parent': '.list_goiy',
                    'list': that.homeSuggestions,
                },
                {
                    'parent': '.list_sp_daxem',
                    'list': that.homeViewed,
                },
            ];
            this.type = 'HOME';
            this.remarketing = 'home';

        } else if (path.match(/\/danh-muc\/[a-z0-9\-]*\.html/)) {
            this.type = 'CATEGORY';
            this.remarketing = 'category';
            parentElement = [{
                'parent': '.list_product',
                'list': that.categoryPage,
            },
                {
                    'parent': '#goiy_choban_folder',
                    'list': that.categorySuggestions,
                },
                {
                    'parent': '.list_sp_daxem',
                    'list': that.categoryViewed,
                },
            ];
        } else if (path.match(/\/deals-dang-dien-ra\.html/)) {
            this.type = 'CATEGORY';
            this.remarketing = 'category';
            parentElement = [{
                'parent': '.list_sp_deal',
                'list': that.categoryPage,
            },
                {
                    'parent': '.list_sp_daxem',
                    'list': that.dealsViewed,
                },
            ];
        } else if (path.match(/\/flash-deals\.html/)) {
            this.type = 'CATEGORY';
            this.remarketing = 'category';
            parentElement = [{
                'parent': '.list_sp_deal',
                'list': that.categoryPage,
            },
                {
                    'parent': '.list_sp_daxem',
                    'list': that.dealsViewed,
                },
            ];
        } else if (path.match(/\/catalogsearch\/result\//)) {
            this.type = 'CATEGORY';
            this.remarketing = 'Search Result page';
            parentElement = [{
                'parent': '.list_product',
                'list': that.searchPage,
            },
                {
                    'parent': '.list_sp_daxem',
                    'list': that.searchViewed,
                },
            ];
        } else if (path.match(/\/tag\/[a-z0-9\-]*\.html/)) {
            this.type = 'CATEGORY';
            this.remarketing = 'tags';
            parentElement = [{
                'parent': '.list_product',
                'list': that.tagPage,
            },
                {
                    'parent': '.list_sp_daxem',
                    'list': that.tagViewed,
                },
            ];
        } else if (path.match(/\/thuong-hieu\/[a-z0-9\-]*\.html/)) {
            this.type = 'CATEGORY';
            this.remarketing = 'category';
            parentElement = [{
                'parent': '.list_product',
                'list': that.brandPage,
            },
                {
                    'parent': '.list_sp_daxem',
                    'list': that.brandViewed,
                },
            ];
        } else if (path.match(/\/san-pham\/[a-z0-9\-]*\.html/)) {
            this.type = 'PRODUCT';
            this.remarketing = 'Product';
            parentElement = [{
                'parent': '.list_sanpham_right',
                'list': that.relatedProducts,
            }];
        } else if (path.match(/checkout\/cart/)) {
            this.type = 'CHECKOUT';
        }
        return parentElement;
    };
    gtmDataLayer.Page.prototype.setDataImpression = function(parentElement) {
        if (!parentElement || parentElement.length === 0) return;
        var itemsList = [];
        parentElement.map(function (ele) {
            var elementData = $(ele.parent).find('.txt_link_hasaki');
            elementData.each(function( index, product) {
                var tracking = $( product ).data();
                tracking.list = ele.list;
                itemsList.push(tracking);
            });
        });
        return itemsList;
    };
    gtmDataLayer.CartDB = function(items) {
        this.prefix = 'ic';
        this.version = 1;
        this.items = $.extend(true, {}, items);
        this.itemDict = {};
        var that = this;
        $.each(this.items, function(index, value) {
            that.itemDict[value.id] = value;
        });
    };
    gtmDataLayer.CartDB.prototype.addCartItem = function(id, variant) {
        if (!this.itemDict[id]) return null;
        var items = this.getItem(id);
        var itemInCart = false;
        var newQuantity = 1;
        $.each(items, function(index, value) {
            itemInCart = true;
            value.quantity += 1;
            newQuantity = value.quantity;
        });
        if (!itemInCart) {
            items.push({'quantity': 1, 'variant': variant});
        }
        this.setItem(id, items);
        return $.extend(
            {'quantity': 1, 'variant': variant}, this.itemDict[id]);
    };
    gtmDataLayer.CartDB.prototype.removeCartItem = function(id, quantity = 1, variant) {
        if (!this.itemDict[id]) {
            return null;
        }
        variant = variant || '';
        var items = this.getItem(id);
        var newQuantity = 0;
        var foundIndex;
        $.each(items, function(index, value) {
            value.quantity -= quantity;
            newQuantity = value.quantity;
            foundIndex = index;
        });
        if (newQuantity < 1 && foundIndex) {
            items.splice(foundIndex, 1);
        }
        this.setItem(id, items);
        // give the user a chance to pick which item
        var removedObj = foundIndex != null ?
            $.extend(
                {'quantity': 1, 'variant': variant},
                this.itemDict[id]) :
            null;
        return removedObj;
    };
    gtmDataLayer.CartDB.prototype.getItem = function(id) {
        const items = window.localStorage.getItem(this.getDBId(id));
        return items === null ? [] : (JSON.parse(items));
    };
    gtmDataLayer.CartDB.prototype.setItem = function(id, itemList) {
        var dbId = this.getDBId(id);
        if (itemList.length == 1 && itemList[0].quantity == 0) {
            window.localStorage.removeItem(dbId);
        } else {
            window.localStorage.setItem(dbId, JSON.stringify(itemList));
        }
    };
    gtmDataLayer.CartDB.prototype.getDBId = function(id) {
        return this.prefix + this.version + '-' + id;
    };
    gtmDataLayer.CartDB.prototype.isDBId = function(id) {
        var valid = !!id;
        return valid && id.split('-').length > 1 &&
            id.split('-')[0].substr(0, this.prefix.length) == this.prefix;
    };
    gtmDataLayer.Page.prototype.onClick = function(action, event, productId = '', variant = null) {
        switch (action) {
            case 'addToCart':
                var item = this.cart.addCartItem(productId, variant);
                if (!!item) {
                    gtmDataLayer.GA.sendAddToCart([item]);
                }
                break;
            case 'addToCartCombo':
                var item = this.cart.addCartItem(productId, variant);
                if (!!item) {
                    gtmDataLayer.GA.sendAddToCartCombo([item]);
                }
                break;
            case 'removeFromCart':
                var quantity = $(event).data('quantity');
                quantity = quantity ? quantity : 1;
                var item = this.cart.removeCartItem(productId, quantity, variant);
                if (!!item) {
                    gtmDataLayer.GA.sendRemoveFromCart([item]);
                }
                break;
            case 'cartCheckOutClick':
                gtmDataLayer.GA.cartCheckOutClick(this.itemsList);
                break;
            case 'productCheckoutClick':
                if (Array.isArray(event)) {
                    gtmDataLayer.GA.productCheckoutClick(event);
                }
                break;
            case 'popupCartCheckoutClick':
                gtmDataLayer.GA.popupCartCheckoutClick(this.cart.items);
                break;
            case 'productClick':
                var that = $(event);
                if (that) {
                    var tracking = that.data();
                    var elementId = that.attr('id');
                    var elementPos = 0;
                    $('.item_shopping, .item_shopping_deal, .item_daxem').each(function(index) {
                        elementPos = index + 1;
                        if ($(this).attr('id') == elementId) {
                            return false;
                        }
                    });
                    if (!!tracking) {
                        tracking.position = elementPos;
                        gtmDataLayer.GA.productClick([tracking]);
                        // event: select_item
                        gtmHsk.ga4.productClick([tracking])
                    }
                }
                // this function have error window.detailProductGa4 => error undefine function
                window.detailProductGa4.onClick('productClick', that);
                return;
        }
    };
} catch (e) {
    console.log(e)
};try {
    var gtmHsk = gtmHsk || {};
    gtmHsk.ga4 = function() {

    }
    function getUrlParameter(sParam) {
        var sPageURL = window.location.search.substring(1),
            sURLVariables = sPageURL.split('&'),
            sParameterName,
            i;
    
        for (i = 0; i < sURLVariables.length; i++) {
            sParameterName = sURLVariables[i].split('=');
    
            if (sParameterName[0] === sParam) {
                return typeof sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
            }
        }
        return false;
    };
    
    gtmHsk.ga4.createProductObjects = function (items, listName) {
        var productObjects = [];
        var listSize = items.length;
        if (listSize === 0) return;
        $.each(items, function (index, value) {
            var obj = {
                'item_id': value.id,
                'item_name': value.name,
                'price': parseInt(value.price),
                'item_brand': value.brand,
                'item_category': "",
                'item_category2': "",
                'item_category3': "",
                'item_category4': value.category ? value.category : value.categoryName,
                'item_variant': value.variant || "" ,
                "item_list_id": "",
                "item_list_name": "",
                'quantity': 1,
            };
            if(obj.item_category4 && obj.item_category4.indexOf('/') != -1) {
                let categoryArray = obj.item_category4.split("/");
                categoryArray.slice(0).reverse().map(function(value, index) {
                    value = value.replace(/^\s+|\s+$/gm,'');
                    let categoryLast = 4;
                    if(index == 0) {
                        obj['item_category' + categoryLast] = value;
                    } else {
                        let categoryKey = 'item_category' +  (categoryLast - index);
                        if(typeof obj[categoryKey] != 'undefined') {
                            obj[categoryKey] = value;
                        }
                    }
                });
            }
            obj['index'] = listSize > 1 ? index : value.position || 0;
            if (listName) {
                obj['item_list_id'] = listName;
                obj['item_list_name'] = listName;
            } else if (value.item_list_id) {
                obj['item_list_id'] = value.item_list_id;
                obj['item_list_name'] = value.item_list_id;
            }
            if (value.quantity) {
                obj['quantity'] = parseInt(value.quantity);
            }
            productObjects.push(obj);
        });
        return productObjects;
    };
    gtmHsk.ga4.sendImpressions = function (items) {
        if (!items || items.length === 0) return;
        $.each(items, function (index, value) {
            let { type, data } = value;
            if (data.length === 0) return;
            let products = gtmHsk.ga4.createProductObjects(data);
            let dataPush = {
                event: "view_item_list",
                ecommerce: {
                    item_list_id: type,
                    item_list_name: type,
                    items: products
                }
            };
            dataLayer.push({ ecommerce: null });
            dataLayer.push(dataPush);
        })
    };
    gtmHsk.ga4.sendProductView = function (items) {
        let { price } = items[0];
        const dataPush = {
            event: "view_item",
            ecommerce: {
                currency: "VND",
                value: parseInt(price),
                items: this.createProductObjects(items, getUrlParameter('lsting'))
            }
        };
        dataLayer.push({ ecommerce: null });
        dataLayer.push(dataPush);
    }
    gtmHsk.ga4.productClick = function (items) {
        if (items.length !== 0) {
            let list = items[0] ? items[0].item_list_id : "";
            const dataPush = {
                event: "select_item",
                ecommerce: {
                    item_list_id: list,
                    item_list_name: list,
                    items: this.createProductObjects(items)
                }
            };
            dataLayer.push({ ecommerce: null });
            dataLayer.push(dataPush);
        }
    };
    gtmHsk.ga4.sendAddToCart = function (items) {
        if (items.length !== 0) {
            var type = 'add_to_cart';
            var products = this.createProductObjects(items);
            var data = {
                "event": type,
                "ecommerce": {
                    "currency": "VND",
                    "value": this.totalPrice(products),
                    "items": products
                }
            };
            dataLayer.push({ ecommerce: null });
            dataLayer.push(data);
            // this.sendItem(items[0], type);
        }
    };

    gtmHsk.ga4.sendGA4 = function (items, type = null) {
        if (items.length !== 0) {
            var products = this.createProductObjects(items);
            var data = {
                "event": type,
                "ecommerce": {
                    "currency": "VND",
                    "value": this.totalPrice(products),
                    "items": products
                }
            };
            dataLayer.push({ ecommerce: null });
            dataLayer.push(data);
            // this.sendItem(items[0], type);
        }
    };

    gtmHsk.ga4.totalPrice = function(products) {
        var total = 0
        products.map((item) => {
            var {price, quantity = 1} = item;
            total += price*quantity;
        });
        total = parseInt(total);
        return total;
    }

    gtmHsk.ga4.totalPriceList = function(products) {
        var total = 0
        products.map((item) => {
            var {price, quantity = 1} = item;
            total += price*quantity;
        });
        total = parseInt(total);
        return total;
    }

    gtmHsk.ga4.remarketingData = function(products, type = 'cart') {
        var remarketingData = {
            dynx_pagetype: type,
            dynx_category: 'Mỹ phẩm',
            dynx_itemid: [],
            dynx_brand: [],
            dynx_totalvalue: 0,
        };
        products.map((item) => {
            var {id, price, brand, quantity = 1} = item;
            remarketingData.dynx_itemid.push(id);
            if (!remarketingData.dynx_brand.includes(brand)) {
                remarketingData.dynx_brand.push(brand);
            }
            remarketingData.dynx_totalvalue += price*quantity;
        });
        remarketingData.dynx_itemid = remarketingData.dynx_itemid.toString();
        remarketingData.dynx_brand = remarketingData.dynx_brand.toString();
        remarketingData.dynx_totalvalue = parseInt(remarketingData.dynx_totalvalue);
        return remarketingData;
    }
    gtmHsk.ga4.sendAddToCartCombo = function (items) {
        if (items.length !== 0) {
            var type = 'addToCartComboDesktop';
            var products = this.createProductObjects(items);
            var data = {
                "event": type,
                "ecommerce": {
                    "currencyCode": "VND",
                    "add": {
                        "products": products
                    }
                }
            };
            data = Object.assign({}, data, this.remarketingData(products, 'cart'));
            dataLayer.push(data);
        }
    };
    gtmHsk.ga4.sendRemoveFromCart = function (items) {
        var type = 'removeFromCartDesktop';
        var products = this.createProductObjects(items);
        var data = {
            "event": type,
            "ecommerce": {
                "currencyCode": "VND",
                "remove": {
                    "products": products
                }
            }
        };
        data = Object.assign({}, data, this.remarketingData(products, 'remove cart'));
        dataLayer.push(data);
    };
    gtmHsk.ga4.reviewCart = function (items) {
        var products = this.createProductObjects(items);
        var data = {
            "event": "view_cart",
            "ecommerce": {
                "currency": "VND",
                "value": this.totalPrice(items),
                "items": products
            }
        };
        // data = Object.assign({}, data, this.remarketingData(products));
        dataLayer.push(data);
    };
    gtmHsk.ga4.cartCheckOutClick = function (items) {
        var option = 'COD';
        if (items.length !== 0) {
            dataLayer.push({ ecommerce: null });
            dataLayer.push({
                "event": "begin_checkout",
                "ecommerce": {
                    "currency": "VND",
                    "value": this.totalPrice(items),
                    "items": this.createProductObjects(items)
                }
            });
        }
    };
    gtmHsk.ga4.productCheckoutClick = function (items) {
        var option = 'COD';
        if (items.length !== 0) {
            dataLayer.push({
                "event": "productCheckoutClickDesktop",
                "ecommerce": {
                    "checkout": {
                        "actionField": { step: 1, option },
                        "products": this.createProductObjects(items)
                    }
                }
            });
        }
    };
    gtmHsk.ga4.popupCartCheckoutClick = function (items) {
        var option = 'COD';
        if (items.length !== 0) {
            dataLayer.push({
                "event": "popupCartCheckoutClickDesktop",
                "ecommerce": {
                    "checkout": {
                        "actionField": { step: 1, option },
                        "products": this.createProductObjects(items)
                    }
                }
            });
        }
    };
    gtmHsk.Page = function (vars = null) {
        this.homePage = 'Homepage';
        this.categoryPage = 'Category';
        this.dealPage = 'Deals Page';
        this.brandPage = 'Brand Page';
        this.searchPage = 'Search Result';
        this.cartPage = 'Cart Page';
        this.campaignPage = 'Campaign Page';
        this.otherPage = 'Other Page';
        this.tagPage = 'Tag Page';
        this.relatedProducts = 'Related Products';
        this.serviceRecommends = 'Service Recommends Products';
        this.homeDeals = 'Home Deals';
        this.homeCate = 'Home Cate';
        this.homeSuggestions = 'Home Product Suggestions';
        this.homeNow2h = 'Home Product Now 2H';
        this.categorySuggestions = 'Category Suggestions';
        this.productSuggestions = 'Product Suggestions';
        this.homeViewed = 'Home Viewed';
        this.categoryViewed = 'Category Viewed';
        this.dealsViewed = 'Deals Viewed';
        this.searchViewed = 'Search Viewed';
        this.tagViewed = 'Tag Viewed';
        this.brandViewed = 'Brand Viewed';
        this.productViewed = 'Product Viewed';
        vars = vars || {};
        this.productId = vars.productId || '';
        this.itemsList = vars.itemsList || [];
        this.type = vars.type || '';
        this.parentElement = vars.parentElement || this.getParentElementListing();
        this.remarketing = vars.remarketing || '';
        var itemDict = this.itemDict = {};
        this.itemsList.forEach(value => {
            itemDict[value.id] = value;
        });
        this.cart = new gtmHsk.CartDB(this.itemsList);
        if (typeof vars.isSetItemsList == 'undefined') {
            this.itemsList = this.setDataImpression(this.parentElement);
            if (this.type == 'CATEGORY') {
                var itemDict = this.itemDict = {};
                this.itemsList.forEach(value => {
                    itemDict[value.id] = value;
                });
                this.cart = new gtmHsk.CartDB(this.itemsList);
            }
        }
        this.onLoad();
    };
    gtmHsk.Page.prototype.onLoad = function () {
        switch (this.type) {
            case 'HOME':
                gtmHsk.ga4.sendImpressions(this.itemsList);
                break;
            case 'PRODUCT':
                if (this.itemDict[this.productId]) {
                    let items = [this.itemDict[this.productId]];
                    gtmHsk.ga4.sendProductView(items);
                }
                gtmHsk.ga4.sendImpressions(this.itemsList, this.remarketing);
                break;
            case 'CATEGORY':
                gtmHsk.ga4.sendImpressions(this.itemsList, this.remarketing);
                break;
            case 'CHECKOUT':
                if (this.itemsList) {
                    gtmHsk.ga4.reviewCart(this.itemsList);
                }
                break;
        }
    };
    gtmHsk.Page.prototype.getParentElementListing = function () {
        var that = this;
        var path = window.location.pathname;
        var parentElement = null;
        if (path == '/') {
            parentElement = [{
                'parent': '.box_deal',
                'elementData': '.block_info_item_sp',
                'list': that.homeDeals,
            },
            {
                'parent': '.block_categories',
                'elementData': '.block_info_item_sp',
                'list': that.homeCate,
            },
            {
                'parent': '.list_goiy_choban',
                'elementData': '.block_info_item_sp',
                'list': that.homeSuggestions,
            },
            {
                'parent': '.list_sp_daxem',
                'elementData': '.txt_link_hasaki',
                'list': that.homeViewed,
            },
            ];
            this.type = 'HOME';
            this.remarketing = 'home';

        } else if (path.match(/\/campaign\/[a-z0-9\-]*/)) {
            this.type = 'CATEGORY';
            this.remarketing = 'category';
            parentElement = [
                {
                    'parent': '#giatot_daily',
                    'elementData': '.v3_thumb_common_sp',
                    'list': that.campaignPage,
                }
            ];
        } else if (path.match(/\/danh-muc\/[a-z0-9\-]*\.html/)) {
            this.type = 'CATEGORY';
            this.remarketing = 'category';
            parentElement = [
                {
                    'parent': '#list_sp_page .ProductGrid__grid',
                    'elementData': '.block_info_item_sp',
                    'list': that.categoryPage,
                },
                {
                    'parent': '#box_goiy_footer',
                    'elementData': '.v3_thumb_common_sp',
                    'list': that.categorySuggestions,
                },
                {
                    'parent': '#box_daxem',
                    'elementData': '.item_daxem',
                    'list': that.categoryViewed,
                },
            ];
        } else if (path.match(/\/deals-dang-dien-ra\.html/)) {
            this.type = 'CATEGORY';
            this.remarketing = 'Deals Page';
            parentElement = [{
                'parent': '#main_deals',
                'elementData': '.v3_thumb_common_sp',
                'list': that.dealPage,
            },
            {
                'parent': '#box_daxem',
                'elementData': '.item_daxem',
                'list': that.dealsViewed,
            },
            ];
        } else if (path.match(/\/flash-deals\.html/)) {
            this.type = 'CATEGORY';
            this.remarketing = 'Deals Page';
            parentElement = [{
                'parent': '#main_deals',
                'list': that.dealPage,
            }, {
                'parent': '#box_daxem',
                'elementData': '.item_daxem',
                'list': that.dealsViewed,
            },
            ];
        } else if (path.match(/\/catalogsearch\/result\//)) {
            this.type = 'CATEGORY';
            this.remarketing = 'Search Result page';
            parentElement = [{
                'parent': '.list_product',
                'elementData': '.v3_thumb_common_sp',
                'list': that.searchPage,
            },
            {
                'parent': '#box_daxem',
                'elementData': '.item_daxem',
                'list': that.dealsViewed,
            },
            ];
        } else if (path.match(/\/tag\/[a-z0-9\-]*\.html/)) {
            this.type = 'CATEGORY';
            this.remarketing = 'Tag Page';
            parentElement = [{
                'parent': '.list_product',
                'list': that.tagPage,
            },
            {
                'parent': '#box_daxem',
                'elementData': '.item_daxem',
                'list': that.dealsViewed,
            },
            ];
        } else if (path.match(/\/thuong-hieu\/[a-z0-9\-]*\.html/)) {
            this.type = 'CATEGORY';
            this.remarketing = 'category';
            parentElement = [{
                'parent': '.ProductGrid__grid',
                'elementData': '.block_info_item_sp',
                'list': that.brandPage,
            }
            ];
        } else if (path.match(/\/san-pham\/[a-z0-9\-]*\.html/)) {
            this.type = 'PRODUCT';
            this.remarketing = 'Product';
        } else if (path.match(/checkout\/cart/)) {
            this.type = 'CHECKOUT';
        }
        return parentElement;
    };
    gtmHsk.Page.prototype.setDataImpression = function (parentElement) {
        if (!parentElement || parentElement.length === 0) return;
        var itemsList = [];
        parentElement.map(function (ele) {
            let data = [];
            $(ele.parent).find(ele.elementData).each(function (index, product) {
                var tracking = $(product).data();
                if (tracking && tracking.id && tracking.name) {
                    tracking.item_list_id = ele.list;
                    tracking.item_list_name = ele.list;
                    tracking.position = index;
                    data.push(tracking);
                }
                $(this).attr('data-position', index);
                $(this).attr('data-item_list_id', ele.list);
                $(this).attr('data-item_list_name', ele.list);
            });
            let elementItem = {
                type: ele.list,
                data
            };
            itemsList.push(elementItem);
        });
        return itemsList;
    };
    gtmHsk.CartDB = function (items) {
        this.prefix = 'ic';
        this.version = 1;
        this.items = $.extend(true, {}, items);
        this.itemDict = {};
        var that = this;
        $.each(this.items, function (index, value) {
            that.itemDict[value.id] = value;
        });
    };
    gtmHsk.CartDB.prototype.addCartItem = function (id, variant, qty = null) {
        if (!this.itemDict[id]) return null;
        if (qty) {
            return $.extend(
                { 'quantity': qty, 'variant': variant }, this.itemDict[id]);
        }
        var items = this.getItem(id);
        var itemInCart = false;
        var newQuantity = 1;
        $.each(items, function (index, value) {
            itemInCart = true;
            value.quantity += 1;
            newQuantity = value.quantity;
        });
        if (!itemInCart) {
            items.push({ 'quantity': 1, 'variant': variant });
        }
        this.setItem(id, items);
        return $.extend(
            { 'quantity': 1, 'variant': variant }, this.itemDict[id]);
    };

    gtmHsk.CartDB.prototype.changeQuantity = function (id, variant, qty = null) {
        if (!this.itemDict[id]) return null;
        if (qty) {
            this.itemDict[id].quantity = qty
            this.itemDict[id].variant = variant
            return this.itemDict[id]
        }
    };

    gtmHsk.CartDB.prototype.getItem = function (id) {
        const items = window.localStorage.getItem(this.getDBId(id));
        return items === null ? [] : (JSON.parse(items));
    };
    gtmHsk.CartDB.prototype.setItem = function (id, itemList) {
        var dbId = this.getDBId(id);
        if (itemList.length == 1 && itemList[0].quantity == 0) {
            window.localStorage.removeItem(dbId);
        } else {
            window.localStorage.setItem(dbId, JSON.stringify(itemList));
        }
    };
    gtmHsk.CartDB.prototype.getDBId = function (id) {
        return this.prefix + this.version + '-' + id;
    };
    gtmHsk.CartDB.prototype.isDBId = function (id) {
        var valid = !!id;
        return valid && id.split('-').length > 1 &&
            id.split('-')[0].substr(0, this.prefix.length) == this.prefix;
    };
    gtmHsk.Page.prototype.onClick = function (action, event, productId = '', variant = null, qty = null) {
        switch (action) {
            case 'addToCart':
                var item = this.cart.addCartItem(productId, variant, qty);
                if (!!item) {
                    gtmHsk.ga4.sendAddToCart([item]);
                }
                break;
            case 'changeQuantity':
                var item = this.cart.changeQuantity(productId, variant, qty);
                if (!!item) {
                    gtmHsk.ga4.sendGA4([item], 'remove_from_cart');
                }
                break;
            case 'addToCartCombo':
                var item = this.cart.addCartItem(productId, variant);
                if (!!item) {
                    gtmHsk.ga4.sendAddToCartCombo([item]);
                }
                break;
            case 'addToWishList':
                    var item = this.cart.addCartItem(productId, variant, qty);
                    if (!!item) {
                        gtmHsk.ga4.sendGA4([item], 'add_to_wishlist');
                    }
                    break;
            case 'removeFromCart':
                var quantity = $(event).data('quantity');
                quantity = quantity ? quantity : 1;
                var item = this.cart.removeCartItem(productId, quantity, variant);
                if (!!item) {
                    gtmHsk.ga4.sendRemoveFromCart([item]);
                }
                break;
            case 'cartCheckOutClick':
                gtmHsk.ga4.cartCheckOutClick(this.itemsList);
                break;
            case 'productCheckoutClick':
                if (Array.isArray(event)) {
                    gtmHsk.ga4.cartCheckOutClick(event);
                }
                break;
            case 'popupCartCheckoutClick':
                gtmHsk.ga4.popupCartCheckoutClick(this.cart.items);
                break;
            case 'productClick':
                var that = $(event);
                if (that) {
                    var tracking = that.data();
                    if (tracking && tracking.id && tracking.name) {
                        gtmHsk.ga4.productClick([tracking]);
                        that.attr('href', that.attr('href') + '?lsting=' + encodeURIComponent(tracking.item_list_id));
                    }
                }
                break;
        }
    };
    gtmHsk.Page.prototype.getHomeViewed = function () {
        var that = this;
        var path = window.location.pathname;
        var parentElement = null;
        if (path == '/') {
            parentElement = [
                {
                    'parent': '#box_daxem .list_sp_daxem_v4',
                    'elementData': '.txt_link_hasaki',
                    'list': that.homeViewed,
                }
            ];
            that.type = 'HOME';
            that.remarketing = 'home';

        }
        let itemsList = this.setDataImpression(parentElement);
        gtmHsk.ga4.sendImpressions(itemsList);

    };

    gtmHsk.Page.prototype.getHomeSuggestions = function () {
        var that = this;
        var path = window.location.pathname;
        var parentElement = null;
        if (path == '/') {
            parentElement = [
                {
                    'parent': '.list_goiy_choban',
                        'elementData': '.block_info_item_sp',
                    'list': that.homeSuggestions,
                }
            ];
            that.type = 'HOME';
            that.remarketing = 'home';
        }
        let itemsList = this.setDataImpression(parentElement);
        gtmHsk.ga4.sendImpressions(itemsList);
    };

    gtmHsk.Page.prototype.getHomeNow2h = function () {
        var that = this;
        var path = window.location.pathname;
        var parentElement = null;
        if (path == '/') {
            parentElement = [
                {
                    'parent': '.list_goiy_choban',
                        'elementData': '.block_info_item_sp',
                    'list': that.homeNow2h,
                }
            ];
            that.type = 'HOME';
            that.remarketing = 'home';
        }
        let itemsList = this.setDataImpression(parentElement);
        gtmHsk.ga4.sendImpressions(itemsList);
    };

    gtmHsk.Page.prototype.getFlashDeal = function () {
        var that = this;
        var path = window.location.pathname;
        var parentElement = null;
        if (path == '/') {
            parentElement = [
                {
                    'parent': '.box_deal',
                    'elementData': '.block_info_item_sp',
                    'list': that.homeDeals,
                }
            ];
            that.type = 'HOME';
            that.remarketing = 'home';
        }
        let itemsList = this.setDataImpression(parentElement);
        gtmHsk.ga4.sendImpressions(itemsList);
    };
} catch (e) {
    console.log(e)
};